require("dotenv").config();
const mongoose = require("mongoose");
const Usuario = require("../models/usuario.model");

// Configuraci√≥n de conexi√≥n a MongoDB
const db_name = process.env.DB_NAME || "USFDATABASE";

const resetAdminPassword = async () => {
  try {
    // Conectar a MongoDB
    await mongoose.connect(`mongodb://localhost/${db_name}`);
    console.log(`Conectado a la base de datos: ${db_name}`);

    // Buscar el usuario administrador
    const admin = await Usuario.findOne({ rol: "administrador" });

    if (!admin) {
      console.log(
        "‚ùå No se encontr√≥ ning√∫n usuario administrador en la base de datos"
      );
      console.log("Ejecuta: npm run seed:admin para crear uno");
      return;
    }

    console.log(
      `üîç Usuario administrador encontrado: ${admin.nombre} ${admin.apellido} (CI: ${admin.ci})`
    );

    // Nueva contrase√±a
    const nuevaContrasena = "admin123";

    // Actualizar la contrase√±a
    admin.contrasena = nuevaContrasena;
    await admin.save(); // El middleware pre-save se encargar√° del hash autom√°ticamente

    console.log("‚úÖ Contrase√±a del administrador actualizada exitosamente:");
    console.log(`- Nombre: ${admin.nombre} ${admin.apellido}`);
    console.log(`- CI: ${admin.ci}`);
    console.log(`- Nueva contrase√±a: ${nuevaContrasena}`);
    console.log(
      "\n‚ö†Ô∏è  IMPORTANTE: Cambia esta contrase√±a despu√©s del primer inicio de sesi√≥n"
    );
  } catch (error) {
    console.error("‚ùå Error al actualizar la contrase√±a:", error.message);
  } finally {
    // Cerrar conexi√≥n
    await mongoose.connection.close();
    console.log("Conexi√≥n a la base de datos cerrada");
  }
};

// Ejecutar el reset de contrase√±a
resetAdminPassword();
